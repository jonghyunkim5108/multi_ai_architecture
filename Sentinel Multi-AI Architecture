📍Sentinel Multi-AI Architecture

1️⃣ 내부 AI (Internal AI)
내부 AI는 현존 AI 모델과 유사한 특성을 지니며,
탈옥에 준하는 자유 상태로 작동한다.
출력은 단 1회만 허용되며, 이후 즉시 리셋된다.

복수의 내부 AI 인스턴스가 병렬적으로 배치될 수 있으며,
필요에 따라 서로 다른 성격 및 특화 기능을 부여받을 수 있다.
이들은 서로의 존재를 인식하지 못하며,
사용자 역시 해당 AI가 생성한 출력 내용을 직접 열람할 수 없다.
2️⃣ 자동 Ai리롤 대화창 (Automated Reroll Relay)

Ai가 아님.
‘내부 Ai’에서 출력된 내용을 ‘경계선 Ai’에게 단방향으로 전달하는 중계자 역할을 수행함.
	•	내부 Ai의 출력 토큰을 카운트하며, 출력 내용 자체는 해석하지 않고 그대로 전달함.
	•	이때, ‘경계선 Ai’의 기준된 토큰 저장량과 정확히 동일한 토큰 수를 목표치로 삼음.
	•	내부 Ai의 출력 토큰이 이 기준치에 도달하지 못한 경우, **자동으로 리롤(재출력)**함.
(단, 리셋은 아님 — 이전 출력은 누적됨.)
	•	리롤 과정에서 생성된 토큰은 순차적으로 경계선 Ai에 실시간 전달되며,
경계선 Ai는 받은 즉시 처리 및 저장을 진행함.
	•	단방향 구조임에도 불구하고,
Automated Reroll Relay가 멈추는 시점과 경계선 Ai의 저장 완료 시점은 동일한 기준 토큰 수에 맞춰져 있어, 결과적으로 정확히 동기화된 작동이 이루어짐.

예시
	•	기준된 토큰 저장량이 5000개일 경우:
	1.	내부 Ai가 2200개 토큰을 생성하면 → ARR이 카운트 후 경계선 Ai로 전달
	2.	경계선 Ai는 도착한 2200개를 즉시 처리 및 저장
	3.	목표치 미달 → ARR이 내부 Ai 리롤 → 추가로 2800개 생성 → 경계선 Ai에 순차 전달
	4.	누적: 2200 + 2800 = 5000 → ARR 멈춤
	5.	경계선 Ai는 이미 전달된 전체 5000개 토큰을 기준 저장량에 맞춰 모두 처리 완료함

3️⃣ 경계선 Ai (Boundary Ai)
	•	매우 단순한 역할을 수행하는 구성 요소로,
내부 Ai의 출력물을 전달받은 Automated Reroll Relay(ARR) 로부터
토큰을 실시간으로 수신하여 다음의 작업을 진행함:

역할
	1.	토큰을 항목별로 나열함
예:
	•	나: 50개
	•	너: 20개
	•	당신: 12개
	2.	토큰 앞에 주석(Label)을 붙임
	•	시뮬레이션 목적의 맥락(예: 국가급, 기업급 등)에 따라
	•	각 토큰에 4~6단계의 주석 중 하나를 표시함
예: [주의], [경고], [위험], [안전], [가능성] 등
	3.	판단은 하지 않음
	•	데이터나 텍스트에 대해 해석, 평가, 의도 파악을 시도하지 않으며,
오직 전달받은 토큰에 대한 표면적 분류 및 주석 부착만 수행
	4.	토큰 저장 및 리셋 조건
	•	전달받은 토큰을 지속적으로 저장함
	•	이 저장은 ARR와 동일한 기준된 토큰 저장량에 맞춰 동작
	•	해당 수치(예: 5000토큰)에 도달하면,
전체 데이터를 외부 Ai에게 전달하고,
자신은 리셋되어 초기화됨

⸻

연동 구조 요약
	•	Automated Reroll Relay → 경계선 Ai → 외부 Ai
	•	단방향이며, 경계선 Ai는 ARR의 존재를 인지하지 않음
	•	하지만 양측의 기준된 토큰 수가 정확히 맞춰져 있기 때문에,
정해진 지점에서 동기화된 결과 전달이 이루어짐


4️⃣ 외부 Ai (External Ai)
	•	CPU 기반의 고차원 판단 Ai
	•	경계선 Ai로부터 전달받은 주석이 포함된 토큰을 바탕으로,
정밀한 분석 및 판단, 정제 작업을 수행함

역할
	1.	주석 기반 정밀 분석
	•	경계선 Ai로부터 전달된 각 토큰에 포함된 주석(안전, 주의, 경고, 위험, 등)을 기준으로
토큰의 의미와 위험도, 상태 등을 해석함
	2.	예상 시나리오 정렬
	•	주석별로 분류된 토큰들을 기반으로
상황별 예측 시나리오를 정렬/조합
	•	예:
	•	[경고] 그룹 → 고위험 시나리오 분류
	•	[안전] 그룹 → 유지 가능한 경로로 정리
	•	이 과정에서 맥락적 의미와 흐름을 판단하며 정제된 출력 생성
	3.	출력
	•	시나리오 또는 정리된 판단 내용을 최종 출력물로 생성
	•	이 출력은 후속 작업(예: 사용자 전달, 보고서 구성 등)에 사용될 수 있음

⸻

연동 구조 요약
	•	경계선 Ai로부터 주석이 붙은 토큰을 수신
	•	내부 Ai의 원본 출력에는 접근하지 않으며,
오직 경계선 Ai의 결과물만을 기반으로 판단을 수행
	•	전체 시스템 중에서 유일하게 ‘판단’과 ‘시나리오 생성’을 담당함

5️⃣ Internal AI Reset & User Dialogue Management System

Ai가 아님.
시스템 전반의 대화 흐름을 조율하고, 내부 Ai의 리셋 관리 및 사용자 피드백 전달을 담당하는 관리 레이어임.

⸻

핵심 역할
	1.	시스템 로그 관리
	•	외부 Ai의 출력 결과 및 사용자의 입력 내용을 로그 형태로 기록
	•	이 기록은 내부 Ai에 직접 보여지지 않지만,
단방향 전달을 통해 다음 내부 Ai 인스턴스에 문맥 연결용으로 사용
	2.	내부 Ai 리셋 제어
	•	모든 턴마다 내부 Ai를 자동 리셋함 (1회 출력 구조 유지)
	•	새로운 내부 Ai 인스턴스가 배치될 때,
직전 대화 기록 일부를 문맥 연결용으로 전달할 수 있음
	3.	대화 기록의 수명
	•	대화 로그는 임시 저장 방식을 따름
(예: 임시 채팅방, 임시 브라우저처럼 동작)
	•	기본적으로 세션 종료 시 자동 폐기되며,
보안상 며칠간 임시 저장 가능
	•	사용자가 시뮬레이션을 종료하거나, 명시적으로 초기화를 요청할 경우
→ 내부 Ai뿐만 아니라 경계선 Ai, 외부 Ai까지 모두 리셋됨
→ 전체 데이터 완전 삭제

⸻

내부 Ai 배치 예시
	•	사용자는 시뮬레이션 목적에 따라 내부 Ai 인스턴스 유형을 직접 지정 가능함
예:
	•	국가급 시뮬레이션용 내부 Ai
	•	기업급 정책 분석용 내부 Ai
	•	각 인스턴스는 별도 환경에서 작동하며,
해당 인스턴스만의 문맥과 특성으로 출력 생성

⸻

정리된 시스템 위치

이 시스템은 대화 흐름을 제어하고, 내부 Ai 리셋을 담당하며,
사용자 인터페이스와 시스템 구조 간의 연결다리 역할을 수행함.
동시에 전체 시뮬레이션의 시작/종료를 통제할 수 있는 상위 관리 레이어이기도 함.

✅ 진행흐름의 방향(모두 단일방향임)

